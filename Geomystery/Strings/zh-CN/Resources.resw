<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About Us.Text" xml:space="preserve">
    <value>关于我们</value>
  </data>
  <data name="CD1" xml:space="preserve">
    <value>在进行试炼与挑战之前，学习是必要的。你需要学会使用直尺和圆规，几乎所有问题都要用到这两种工具，你也需要在本章节中学会使用一些复合工具……</value>
  </data>
  <data name="CD2" xml:space="preserve">
    <value>道场能教给你的只是最基础的知识，如果想成为大师，你还需要在试炼和挑战的路上不断学习，你能依靠的只有你自己……</value>
  </data>
  <data name="CD3" xml:space="preserve">
    <value />
  </data>
  <data name="Chapter1.Content" xml:space="preserve">
    <value>第一章节</value>
  </data>
  <data name="Chapter2.Content" xml:space="preserve">
    <value>第二章节</value>
  </data>
  <data name="Chapter3.Content" xml:space="preserve">
    <value>第三章节</value>
  </data>
  <data name="CN1" xml:space="preserve">
    <value>几何学习道场</value>
  </data>
  <data name="CN2" xml:space="preserve">
    <value>几何试炼之地</value>
  </data>
  <data name="CN3" xml:space="preserve">
    <value>几何挑战圣殿</value>
  </data>
  <data name="Freestyle.Content" xml:space="preserve">
    <value>自由模式</value>
  </data>
  <data name="Fullscreen.Text" xml:space="preserve">
    <value>全屏</value>
  </data>
  <data name="Game.Content" xml:space="preserve">
    <value>游戏模式</value>
  </data>
  <data name="Language.Text" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="LanguageNow.Text" xml:space="preserve">
    <value>简体中文</value>
  </data>
  <data name="Music Volume.Text" xml:space="preserve">
    <value>音乐音量</value>
  </data>
  <data name="NEXTLEVEL" xml:space="preserve">
    <value>下一关</value>
  </data>
  <data name="Night Mode.Text" xml:space="preserve">
    <value>夜间模式</value>
  </data>
  <data name="Option.Content" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="PLAYAGAIN" xml:space="preserve">
    <value>再试一次</value>
  </data>
  <data name="Reset Progress.Text" xml:space="preserve">
    <value>重制游戏进度</value>
  </data>
  <data name="SFX Volume.Text" xml:space="preserve">
    <value>音效音量</value>
  </data>
  <data name="L1D" xml:space="preserve">
    <value>今天你需要迈出几何学习的第一步，我们不妨从最简单的学起。试着用三条直线连接这三个点，直线是你以后最常用的工具，你必须掌握它……</value>
  </data>
  <data name="L1N" xml:space="preserve">
    <value>以线连点</value>
  </data>
  <data name="L2D" xml:space="preserve">
    <value>在几何学习的路上，直线不能帮助你解决所有问题，那我们何不试试圆？试着以给定三点中最上方的点为圆心画出经过其他两点的两个同心圆，这没有那么困难,是吧？</value>
  </data>
  <data name="L2N" xml:space="preserve">
    <value>同心圆</value>
  </data>
  <data name="L3D" xml:space="preserve">
    <value>看起来你已经学会使用直线和圆了，这实在可喜可贺。不过有些时候，你需要一些点来辅助你。试着标出给定的三条直线的交点，这个步骤你以后需要经常用到……</value>
  </data>
  <data name="L3N" xml:space="preserve">
    <value>求交点</value>
  </data>
  <data name="L4D" xml:space="preserve">
    <value>你已经学会使用三种基本工具了？看来你已经准备好接受第一个测试了。尝试着基于给定的射线画出一个60°的角，我想这难不倒你吧？</value>
  </data>
  <data name="L4N" xml:space="preserve">
    <value>画60°角</value>
  </data>
  <data name="L5D" xml:space="preserve">
    <value>几何学习的路还很长，先别沾沾自喜。你需要学会更多更复杂的工具，试着画出这个线段的垂直平分线。补充一句，熟练地掌握垂直平分线是你学会解决难题的必修课……</value>
  </data>
  <data name="L5N" xml:space="preserve">
    <value>垂直平分线</value>
  </data>
  <data name="L6D" xml:space="preserve">
    <value>还记得你画的60°角么？几何学习的过程中，线不是我们唯一要操作的对象，我们还要面对“角”。试着画出给定角的角平分线，你可能会更进一步理解线与角的关系……</value>
  </data>
  <data name="L6N" xml:space="preserve">
    <value>角平分线</value>
  </data>
  <data name="L7D" xml:space="preserve">
    <value>垂直平分线和角平分线已经掌握了？我想你已经准备好下一步复合工具的学习了。试着过给定点画出这条直线的垂线，不知道你是否能看出这个问题的本质……</value>
  </data>
  <data name="L7N" xml:space="preserve">
    <value>垂线</value>
  </data>
  <data name="L8D" xml:space="preserve">
    <value>结束了复合工具的学习，我想你已经跃跃欲试了，不知道你是否准备好迎接新测试了。试着画出给定菱形的内切圆，不要忘了你学到的新工具……</value>
  </data>
  <data name="L8N" xml:space="preserve">
    <value>菱形内切圆</value>
  </data>
  <data name="L9D" xml:space="preserve">
    <value>相信这些简单的谜题已经难不住你了，在你开始你的试炼之路前，你还需要进行一次测试来证明自己.试着标出已知圆的圆心，这个问题可不像它看起来的一样简单……</value>
  </data>
  <data name="L9N" xml:space="preserve">
    <value>求圆心</value>
  </data>
  <data name="L10N" xml:space="preserve">
    <value>平行线</value>
  </data>
  <data name="L11N" xml:space="preserve">
    <value>切线</value>
  </data>
  <data name="L12N" xml:space="preserve">
    <value>再次完成60°角</value>
  </data>
  <data name="L13N" xml:space="preserve">
    <value>外切正三角形</value>
  </data>
  <data name="L14N" xml:space="preserve">
    <value>梯形中位线</value>
  </data>
  <data name="L15N" xml:space="preserve">
    <value>平分矩形</value>
  </data>
  <data name="L16N" xml:space="preserve">
    <value>三角形的外接圆</value>
  </data>
  <data name="L17N" xml:space="preserve">
    <value>三角形的内切圆</value>
  </data>
  <data name="L18N" xml:space="preserve">
    <value>正六边形</value>
  </data>
  <data name="L10D" xml:space="preserve">
    <value>看来你已经准备好开始试炼了。如你所见，现在有一条直线。你的任务是过给定点画出给定直线的平行直线。</value>
  </data>
  <data name="L11D" xml:space="preserve">
    <value>如你所见，你的操作对象是一个圆。你的任务是画出给定圆在给定点位置的切线。</value>
  </data>
  <data name="L12D" xml:space="preserve">
    <value>如你所见，这道题似曾相识，但实际上二者完全不同。你的任务是在给定直线的逆时针方向上过给定点画出一个60°角。</value>
  </data>
  <data name="L13D" xml:space="preserve">
    <value>如你所见，你需要继续完成一个关于圆的问题。你的任务是过给定点画出给定圆的外切正三角形。</value>
  </data>
  <data name="L14D" xml:space="preserve">
    <value>如你所见，这是一个梯形，你以后还会再见到它。你的任务是画出给定梯形的中位线。</value>
  </data>
  <data name="L15D" xml:space="preserve">
    <value>如你所见，这次你的操作对象变成了一个矩形。你的任务是过矩形外的给定点画出一条线将给定切割成面积相等的两部分。</value>
  </data>
  <data name="L16D" xml:space="preserve">
    <value>如你所见，这次你的操作对象是一个三角形。你的任务是画出给定三角形的外接圆。</value>
  </data>
  <data name="L17D" xml:space="preserve">
    <value>如你所见，这个问题与上个问题很像，不过它们完全相反。你的任务是画出给定三角形的内切圆。</value>
  </data>
  <data name="L18D" xml:space="preserve">
    <value>看来你已经通过了前面的试炼。现在你可以尝试着构建一个新图形，何不试试一个正六边形？你的任务是以给定线段为正六边形的一边，在给定线段上方画一个正六边形。</value>
  </data>
  <data name="AC1D" xml:space="preserve">
    <value>完成了你的第一关，开启了你的解题之旅。</value>
  </data>
  <data name="AC1N" xml:space="preserve">
    <value>牛刀小试</value>
  </data>
  <data name="AC2D" xml:space="preserve">
    <value>通关第一章。</value>
  </data>
  <data name="AC2N" xml:space="preserve">
    <value>初出茅庐</value>
  </data>
  <data name="AC3D" xml:space="preserve">
    <value>通关第二章。</value>
  </data>
  <data name="AC3N" xml:space="preserve">
    <value>进阶之路</value>
  </data>
  <data name="AC4D" xml:space="preserve">
    <value>解锁全部关卡。</value>
  </data>
  <data name="AC4N" xml:space="preserve">
    <value>解题狂人</value>
  </data>
  <data name="AC5D" xml:space="preserve">
    <value>通关所有章节。</value>
  </data>
  <data name="AC5N" xml:space="preserve">
    <value>几何学家</value>
  </data>
  <data name="AC6D" xml:space="preserve">
    <value>完美通过所有关卡。</value>
  </data>
  <data name="AC6N" xml:space="preserve">
    <value>一代宗师</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>请确认您是否要重置游戏的所有进程？</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>确认</value>
  </data>
  <data name="Congratulations" xml:space="preserve">
    <value>恭喜过关！</value>
  </data>
  <data name="Problemsolved" xml:space="preserve">
    <value>完美通过</value>
  </data>
  <data name="Warnning" xml:space="preserve">
    <value>警告！</value>
  </data>
</root>