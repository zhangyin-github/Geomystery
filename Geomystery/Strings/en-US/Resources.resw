<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About Us.Text" xml:space="preserve">
    <value>About Us</value>
  </data>
  <data name="CD1" xml:space="preserve">
    <value>Learning is necessary before starting trail and challenge. You need to learn how to use rulers and compasses ,because they will help you to solve almost all of the problems .You also need to learn some kind of composite tools in this chapter.</value>
  </data>
  <data name="CD2" xml:space="preserve">
    <value>Dojo can teach you only the most basic knowledge. If you want to be a master, you have to cintinue your learning in the course of trail and challenge.You can only rely on yourself.</value>
  </data>
  <data name="CD3" xml:space="preserve">
    <value>Coming Soon ...</value>
  </data>
  <data name="Chapter1.Content" xml:space="preserve">
    <value>Chapter1</value>
  </data>
  <data name="Chapter2.Content" xml:space="preserve">
    <value>Chapter2</value>
  </data>
  <data name="Chapter3.Content" xml:space="preserve">
    <value>Chapter3</value>
  </data>
  <data name="CN1" xml:space="preserve">
    <value>Dojo of Geometry</value>
  </data>
  <data name="CN2" xml:space="preserve">
    <value>Coloseum of Geometry</value>
  </data>
  <data name="CN3" xml:space="preserve">
    <value>Valhalla of Geometry</value>
  </data>
  <data name="Freestyle.Content" xml:space="preserve">
    <value>Freestyle</value>
  </data>
  <data name="Fullscreen.Text" xml:space="preserve">
    <value>Fullscreen</value>
  </data>
  <data name="Game.Content" xml:space="preserve">
    <value>Game</value>
  </data>
  <data name="Language.Text" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LanguageNow.Text" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Music Volume.Text" xml:space="preserve">
    <value>Music Volume</value>
  </data>
  <data name="NEXTLEVEL" xml:space="preserve">
    <value>Next Problem!</value>
  </data>
  <data name="Night Mode.Text" xml:space="preserve">
    <value>Night Mode</value>
  </data>
  <data name="Option.Content" xml:space="preserve">
    <value>Option</value>
  </data>
  <data name="PLAYAGAIN" xml:space="preserve">
    <value>Stay Here！</value>
  </data>
  <data name="Reset Progress.Text" xml:space="preserve">
    <value>Reset Progress</value>
  </data>
  <data name="SFX Volume.Text" xml:space="preserve">
    <value>SFX Volume</value>
  </data>
  <data name="L1D" xml:space="preserve">
    <value>Today you need to take the first step in geometric learning,why not get started from the most simple content.Try to draw three lines to connect these three points .Line is one of the most useful tools you will use to solve problems ,you must comprehend it.</value>
  </data>
  <data name="L1N" xml:space="preserve">
    <value>Draw Line</value>
  </data>
  <data name="L2D" xml:space="preserve">
    <value>Lines can't help you with solving all of the question when you learn geometry,so why not try to use circles ? Try to draw two concentric circles through the other two points with a given point which is above the others as the center.This question is not too difficult ,is it?</value>
  </data>
  <data name="L2N" xml:space="preserve">
    <value>Draw Circle</value>
  </data>
  <data name="L3D" xml:space="preserve">
    <value>It seems that you have learned to use straight lines and rounds, which is really gratifying.But sometimes you need some points to help you.Try to mark the intersection of the given three lines,and this step will be used repeatedly.</value>
  </data>
  <data name="L3N" xml:space="preserve">
    <value>Draw Point</value>
  </data>
  <data name="L4D" xml:space="preserve">
    <value>Have you already learnt the three basic tools?It seems that you are ready to accept the first test. Try to draw a 60° angle in the counterclockwise direction of the given line through the given point , I think it's not hard for you.</value>
  </data>
  <data name="L4N" xml:space="preserve">
    <value>Angle of 60°</value>
  </data>
  <data name="L5D" xml:space="preserve">
    <value>It is a long way to lern geometry ,don't be complacent. You need to learn how to use more tools which is more complex.Try to draw the perpendicular bisector of this line. What's more ,mastered perpendicular bisectors is obligatory course if you want to learn to solve problems.</value>
  </data>
  <data name="L5N" xml:space="preserve">
    <value>Perpendicular Bisector</value>
  </data>
  <data name="L6D" xml:space="preserve">
    <value>Do you remember the 60 degree angle you have drawn? The line isn't the only object we have to operate, we need to learn to operate angle.Try to draw the bisector of the given angle. You will learn more about the relationship between the lines and the angles.</value>
  </data>
  <data name="L6N" xml:space="preserve">
    <value>Angle Bisector</value>
  </data>
  <data name="L7D" xml:space="preserve">
    <value>Have you already mastered perpendicular bisectors and angle bisectors ?I think you are ready to continue your learning in using composite tools. Try to draw the perpendicular line of the given line through the given point. Can you see the nature of this problem?</value>
  </data>
  <data name="L7N" xml:space="preserve">
    <value>Perpendicular Line</value>
  </data>
  <data name="L8D" xml:space="preserve">
    <value>Finished learning to use composite tool , maybe you are eager to do a quiz. Are you ready to do it?  Try to draw the inscribed circle of the given diamond. Don't forget to use the new tools you have lerant to help you.</value>
  </data>
  <data name="L8N" xml:space="preserve">
    <value>Circle in Diamond</value>
  </data>
  <data name="L9D" xml:space="preserve">
    <value>I think these simple problems can not stumped you, you need a final quiz before starting your test. Try to draw the center of the given circle. This question is not as simple as it looks.</value>
  </data>
  <data name="L9N" xml:space="preserve">
    <value>Circle Center</value>
  </data>
  <data name="L10N" xml:space="preserve">
    <value>Parallel Lines</value>
  </data>
  <data name="L11N" xml:space="preserve">
    <value>Tangent</value>
  </data>
  <data name="L12N" xml:space="preserve">
    <value>Angle of 60°Again</value>
  </data>
  <data name="L13N" xml:space="preserve">
    <value>Circumscribed Equilateral Triangle</value>
  </data>
  <data name="L14N" xml:space="preserve">
    <value>Trapezoidal Median Line</value>
  </data>
  <data name="L15N" xml:space="preserve">
    <value>Cut Rectangle</value>
  </data>
  <data name="L16N" xml:space="preserve">
    <value>Triangle in Circle</value>
  </data>
  <data name="L17N" xml:space="preserve">
    <value>Circle in Triangle</value>
  </data>
  <data name="L18N" xml:space="preserve">
    <value>Regular Hexagon</value>
  </data>
  <data name="L10D" xml:space="preserve">
    <value>It seems that you are ready for your trail . As you can see ,there is a line .Draw a parallel line through the given point of the given line.</value>
  </data>
  <data name="L11D" xml:space="preserve">
    <value>As you can see ,you operation object is a circle .Draw the tangent through the given point of the given circle .</value>
  </data>
  <data name="L12D" xml:space="preserve">
    <value>As you can see ,this problem seems to have met before , but they are completely different in fact .Draw a 60° angle at a given point in the counterclockwise direction of a given line .</value>
  </data>
  <data name="L13D" xml:space="preserve">
    <value>As you can see, you need to finish one more problem about circle. Draw a circumscribed equilateral triangle through the given point of the given circle.</value>
  </data>
  <data name="L14D" xml:space="preserve">
    <value>As you can see ,this is a trapezoidal ,you will meet it in the future.Draw the median line of the given trapezoidal.</value>
  </data>
  <data name="L15D" xml:space="preserve">
    <value>As you can see ,your operation object is a rectangle .Draw a line through the given point that cuts the rectangle into two parts of equal area.</value>
  </data>
  <data name="L16D" xml:space="preserve">
    <value>As you can see ,your operation object is a triangle .Draw the Circumcircle of the given triangle.</value>
  </data>
  <data name="L17D" xml:space="preserve">
    <value>As you can see ,this problem is similar as previous one ,but they are totally opposite .Draw the inscribed circle of the given triangle.</value>
  </data>
  <data name="L18D" xml:space="preserve">
    <value>It seems that you have already passed the trial before .Now ,you can try to construct a new gragh,why not draw a regular hexagon ?Draw a regular hexagon above the given line with using the given line as one of it's side.</value>
  </data>
  <data name="AC1D" xml:space="preserve">
    <value>Solve your first problem.</value>
  </data>
  <data name="AC1N" xml:space="preserve">
    <value>First Try</value>
  </data>
  <data name="AC2D" xml:space="preserve">
    <value>Finish the 1st chapter.</value>
  </data>
  <data name="AC2N" xml:space="preserve">
    <value>Graduation</value>
  </data>
  <data name="AC3D" xml:space="preserve">
    <value>Finish the 2nd chapter.</value>
  </data>
  <data name="AC3N" xml:space="preserve">
    <value>Finish Trail</value>
  </data>
  <data name="AC4D" xml:space="preserve">
    <value>Unlock all problems.</value>
  </data>
  <data name="AC4N" xml:space="preserve">
    <value>Elite Player</value>
  </data>
  <data name="AC5D" xml:space="preserve">
    <value>Solve all problems.</value>
  </data>
  <data name="AC5N" xml:space="preserve">
    <value>Geometricist</value>
  </data>
  <data name="AC6D" xml:space="preserve">
    <value>Solve all problems perfectly.</value>
  </data>
  <data name="AC6N" xml:space="preserve">
    <value>Lengend of Geometry</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Please confirm whether you want to reset all your game progress?</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="Congratulations" xml:space="preserve">
    <value>Congratulations!</value>
  </data>
  <data name="Problemsolved" xml:space="preserve">
    <value>Problem solved!</value>
  </data>
  <data name="Warnning" xml:space="preserve">
    <value>Warnning</value>
  </data>
  <data name="Lock" xml:space="preserve">
    <value>Lock</value>
  </data>
  <data name="Unlock" xml:space="preserve">
    <value>Unlocked</value>
  </data>
  <data name="isunlock" xml:space="preserve">
    <value>A new achievement has been unlocked!</value>
  </data>
</root>